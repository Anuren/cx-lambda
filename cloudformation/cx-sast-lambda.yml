---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda to trigger Checkmarx Scan'
Parameters:
  SSM:
    Description: 'SSM Flag, if True, values are retrieved from SSM Parameter store'
    Type: String
    Default: True
  SSMParamPath:
    Description: 'SSM Parameter Path'
    Type: String
    Default: Checkmarx
  KMSKeyAlias:
    Description: 'Key Alias'
    Type: String
    Default: aws/ssm
  CxUrl:
    Description: 'Checkmarx URL, or SSM parameter path (non-encrypted)'
    Type: String
    Default: https://cx.xxxx.com
  CxUser:
    Description: 'Checkmarx Service Account User, or SSM parameter path (Secure)'
    Type: String
    NoEcho: True
  CxPassword:
    Description: 'Checkmarx Service Account Password, or SSM parameter path (Secure)'
    Type: String
    NoEcho: True
  CxTeam:
    Description: 'Checkmarx base team'
    Type: String
    Default: \CxServer\SP\Checkmarx\Automation
  CxPreset:
    Description: 'Scan Preset'
    Type: String
    Default: Checkmarx Default
Resources:
  CxScanLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: checkmarx-public
        S3Key: cx-lambda-1.0.zip
      FunctionName: cxScan
      Handler: lambda_function.lambda_handler
      Runtime: python2.7
      Timeout: 20
      MemorySize: 128
      Role:
        !GetAtt LambdaCodePipelineSSMExecutionRole.Arn
      Environment:
        Variables:
        Variables:
          SSM: !Ref SSM
          CX_USER: !Ref CxUser
          CX_PASSWORD: !Ref CxPassword
          CX_URL: !Ref CxUrl
          CX_TEAM: !Ref CxTeam
          CX_PRESET: !Ref CxPreset

  LambdaCodePipelineSSMExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'lambda.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: "/"
      ManagedPolicyArns: ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
      Policies:
      - PolicyName: CodePipeline-Lambda-SSM
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - codepipeline:PutJobSuccessResult
            - codepipeline:PutJobFailureResult
            Resource: "*"
            Effect: Allow
          - Action:
            - ssm:GetParameter
            - ssm:GetParametersByPath
            - ssm:GetParameters
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SSMParamPath}/*'
            Effect: Allow
          - Action: kms:Decrypt
            Resource: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:parameter/${KMSKeyAlias}/*'
            Effect: Allow
Outputs:
  LambdaFunction:
    Description: Lambda export values
    Value:
      !GetAtt CxScanLambdaFunction.Arn
    Export:
      Name: CxScan
      Arn:
        !GetAtt CxScanLambdaFunction.Arn
